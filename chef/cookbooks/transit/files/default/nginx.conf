# you generally only need one nginx worker unless you're serving
# large amounts of static files which require blocking disk reads
worker_processes 1;

# # drop privileges, root is needed on most systems for binding to port 80
# # (or anything < 1024).  Capability-based security may be available for
# # your system and worth checking out so you won't need to be root to
# # start nginx to bind on 80
user nobody nogroup; # for systems with a "nogroup"

# Feel free to change all paths to suite your needs here, of course
error_log /tmp/nginx.error.log;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # "on" if nginx worker_processes > 1
  use epoll; # enable for Linux 2.6+
}

http {
  # http://charles.lescampeurs.org/2008/11/14/fix-nginx-increase-server_names_hash_bucket_size
  # https://www.digitalocean.com/community/questions/help-optimizing-the-server-for-wordpress-ubuntu-nginx-varnish
  server_names_hash_bucket_size 64;
  types_hash_max_size 2048;

  # nginx will find this file in the config directory set at nginx build time
  include mime.types;

  # fallback in case we can't determine a type
  default_type application/octet-stream;

  # click tracking!
  access_log /tmp/nginx.access.log combined;

  # you generally want to serve static files with nginx since neither
  # Unicorn nor Rainbows! is optimized for it at the moment
  sendfile on;

  tcp_nopush on; # off may be better for *some* Comet/long-poll stuff
  tcp_nodelay off; # on may be better for some Comet/long-poll stuff

  # There are other gzip settings that may be needed used to deal with
  # bad clients out there, see http://wiki.nginx.org/NginxHttpGzipModule
  gzip on;
  gzip_http_version 1.0;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.";
  gzip_types text/plain text/xml text/css
             text/comma-separated-values
             text/javascript application/x-javascript
             application/atom+xml application/json;

  server {
    listen 80 deferred;

    # If you have IPv6, you'll likely want to have two separate listeners.
    # One on IPv4 only (the default), and another on IPv6 only instead
    # of a single dual-stack listener.  A dual-stack listener will make
    # for ugly IPv4 addresses in $remote_addr (e.g ":ffff:10.0.0.1"
    # instead of just "10.0.0.1") and potentially trigger bugs in
    # some software.
    # listen [::]:80 ipv6only=on; # deferred or accept_filter recommended

    client_max_body_size 4G;
    server_name transit.suburbancubicle.com;
    keepalive_timeout 5;
    #root /var/www/transit.suburbancubicle.com;
    #index index.html;

    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_http_version 1.1;
    }
  }

  # Example nginx configuration file for TileStream.
  #
  # Assumes you have TileStream configured to run on two different ports so tiles
  # can served through a CDN. In settings.js, `port` is set to 9000, while
  # `UIPort` is set to 9001.

  #
  # UI Server
  #
  #upstream ui {
  #  server 127.0.0.1:9001;
  #}

  #server {
  #  listen 80;
  #  server_name tilesdirect.suburbancubicle.com;
  #  access_log  /var/log/nginx/tilestream-ui.access.log;

  #  location / {
  #      proxy_pass http://ui;
  #  }
  #}

  #
  # Tile Server
  #
  upstream tiles.suburbancubicle.com {
    server 127.0.0.1:9000;
  }

  server {
    listen 80;
    server_name tiles.suburbancubicle.com;
    access_log  /var/log/nginx/tilestream-tiles.access.log;

    location / {
        proxy_pass http://tiles.suburbancubicle.com;
    }
  }
}
